name: Starship Analyzer CI

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ master, development ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']
    
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r requirements.txt
      if: hashFiles('requirements.txt') != ''
    
    - name: Fix Windows version detection
      run: |
        echo "Patching Windows version detection code..."
        find_cmd="if platform.system() == 'Windows' and int(platform.release()) < 10:"
        replace_cmd="if platform.system() == 'Windows':\n            try:\n                if int(''.join(c for c in platform.release() if c.isdigit())) < 10:\n                    use_colors = False\n            except ValueError:\n                # Newer Windows versions (like Server 2022) will use colors\n                pass"
        if [ "${{ runner.os }}" == "Windows" ]; then
          powershell -Command "(Get-Content utils/logger/formatters.py) -replace [regex]::Escape(\"$find_cmd\"), \"$replace_cmd\" | Set-Content utils/logger/formatters.py"
        else
          sed -i "s|$find_cmd|$replace_cmd|g" utils/logger/formatters.py
        fi
      shell: bash
    
    - name: Run tests with pytest
      run: |
        pytest --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
